#
# RUN: %parse %s > %t
# RUN: %check %t %s
#

# CHECK: (file

# CHECK: (value foo =
# CHECK:   (compoundExpr {
foo = {

	# CHECK: (value x =
	# CHECK:   (term (term (nameReference foo)) ( arguments ))
	# CHECK: ;)
	x = foo();

	# CHECK: (value y =
	# CHECK:   (term (term (nameReference bar))
	# CHECK:     ( (arguments
	# CHECK:       (nameReference x)
	# CHECK:     ) )
	# CHECK:   )
	# CHECK: ;)
	y = bar(x);

	# CHECK: (value z =
	# CHECK:   (term (term (nameReference baz))
	# CHECK:     ( (arguments
	# CHECK:     (nameReference y)
	# CHECK:     ) )
	# CHECK:   )
	# CHECK: ;)
	z = baz(y);

	# CHECK: (expression
	# CHECK:   (nameReference z)
	# CHECK: )
	z
};

# CHECK:  ;)
# CHECK:  <EOF>)
