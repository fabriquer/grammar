#
# RUN: %parse %s > %t
# RUN: %check %t %s
#

# CHECK:  (value foo =
# CHECK:    (record record {
# CHECK:      (value foo = (expression (term (literal 'hi'))) ;)
# CHECK:      (value bar = (expression (term (literal 'world'))) ;)
# CHECK:    })
# CHECK:  ;)
foo = record { foo = 'hi'; bar = 'world'; };

# CHECK:  (value bar =
# CHECK:    (fieldReference (term (nameReference foo)) . bar)
# CHECK:  ;)
bar = foo.bar;

# CHECK:  (value scope_with_captures =
# CHECK:    (record record {
scope_with_captures = record
{
	# CHECK: (value def = (expression (term (literal 'Hello, world!'))) ;)
	def = 'Hello, world!';

	# CHECK: (value ref = (expression (term (nameReference def))) ;)
	ref = def;

	# CHECK: (value f =
	# CHECK:   (function function
	# CHECK:     ( (parameters
	# CHECK:         (parameter prefix : (type (simpleType string)))
	# CHECK:     ) )
	# CHECK:     (expression
	# CHECK:       (nameReference string)
	# CHECK:       (addOp +)
	# CHECK:       (nameReference def)
	# CHECK:     )
	# CHECK:   )
	# CHECK: ;)
	f = function(prefix:string) string + def;

# CHECK: })
# CHECK: ;)
};
